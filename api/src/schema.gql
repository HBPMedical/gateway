# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  label: String
}

type Variable {
  id: String!
  label: String
  type: String!
  description: String
  enumerations: [Category!]!
  groups: [Group!]!
}

type Group {
  id: String!
  label: String
  description: String
  groups: [Group!]!
  variables: [Variable!]!
}

type Domain {
  id: String!
  label: String
  description: String
  groups: [Group!]!
  variables: [Variable!]!
  datasets: [Category!]!
  rootGroup: Group!
}

type Header {
  name: String!
  type: String!
}

type AlgorithmParameter {
  name: String!
  value: [String!]!
}

type Algorithm {
  name: String!
  parameters: [AlgorithmParameter!]
  type: String!
}

type Experiment {
  uuid: String
  author: String
  createdAt: Float
  updateAt: Float
  finishedAt: Float
  viewed: Boolean
  status: String
  shared: Boolean!
  results: [ResultUnion!]
  datasets: [String!]!
  filter: String
  domain: String!
  variables: [String!]!
  algorithm: Algorithm!
  name: String!
}

union ResultUnion = TableResult | RawResult

type TableResult {
  name: String!
  data: [[String!]!]!
  headers: [Header!]!
}

type RawResult {
  data: JSONObject!
  listMax: [String!]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type PartialExperiment {
  uuid: String
  author: String
  createdAt: Float
  updateAt: Float
  finishedAt: Float
  viewed: Boolean
  status: String
  shared: Boolean
  results: [ResultUnion!]
  datasets: [String!]
  filter: String
  domain: String
  variables: [String!]
  algorithm: Algorithm
  name: String
}

type ListExperiments {
  currentPage: Float
  totalPages: Float
  totalExperiments: Float
  experiments: [Experiment!]!
}

type Query {
  domains(ids: [String!] = []): [Domain!]!
  experiments(name: String = "", page: Float = 0): ListExperiments!
  expriment(uuid: String!): Experiment!
}

type Mutation {
  createExperiment(transient: Boolean = false, data: ExperimentCreateInput!): Experiment!
  editExperiment(data: ExperimentEditInput!, uuid: String!): Experiment!
  removeExperiment(uuid: String!): PartialExperiment!
}

input ExperimentCreateInput {
  datasets: [String!]!
  filter: String
  domain: String!
  variables: [String!]!
  algorithm: AlgorithmInput!
  name: String!
}

input AlgorithmInput {
  name: String!
  parameters: [AlgorithmParamInput!] = []
  type: String!
}

input AlgorithmParamInput {
  name: String!
  value: [String!]!
}

input ExperimentEditInput {
  name: String
  viewed: Boolean
}
